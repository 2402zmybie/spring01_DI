spring中的依赖注入:
    IOC的作用:
        降低耦合(依赖关系)
    依赖关系的管理:
        以后都交给spring来维护
    在当前类需要用到其他类的对象,由spring为我们提供,我们只需要在配置文件中说明
    依赖关系的维护:
        就称之为依赖注入
    依赖注入:
        能注入的数据: 有三类
            基本类型和String
            其他bean类型(在配置文件中或者注解配置过的bean)
            复杂类型/集合类型
        注入的方式: 有三种
            第一种: 使用构造函数提供
            第二种: 使用set方法提供
            第三种: 使用注解提供
            1 构造函数注入:
                使用的标签 constructor-arg
                标签出现的位置: bean标签的内部
                标签中的属性:
                    type:
                    index:
                    name: 用于指定构造函数中指定名称的参数赋值
                    =================以上三个用于指定给构造函数中哪个参数赋值====================
                    value: 用于提供基本类型和String类型的数据
                    ref: 用于指定其他的bean类数据. 它指的就是在spring的Ioc核心容器中出现过的bean对象
                 优势: 在获取bean对象时,注入数据是必须的操作,否则对象无法创建成功
                 劣势: 改变了bean对象的实例化方式,使我们在创建对象时, 如果用不到这些数据,也必须提供

            2 set方法注入: (常用)
                            使用的标签 property
                            标签出现的位置: bean标签的内部
                            标签中的属性:
                                name: 用于指定构造函数中指定名称的参数赋值
                                value: 用于提供基本类型和String类型的数据
                                ref: 用于指定其他的bean类数据. 它指的就是在spring的Ioc核心容器中出现过的bean对象
                             优势: 创建对象没有明确的限制, 可以直接使用默认构造函数
                             劣势: 不能限定某个参数的限制

            2 复杂属性注入:
                           用于给List结构集合注入的标签: list array set
                           用于给Map结构集合注入的标签: map props
                           结构相同,标签可以互换



